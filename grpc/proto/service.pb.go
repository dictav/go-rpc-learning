// Code generated by protoc-gen-go.
// source: service.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	service.proto

It has these top-level messages:
	Response
	Request
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto1.ProtoPackageIsVersion1

type Response struct {
	Answer string `protobuf:"bytes,1,opt,name=answer" json:"answer,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto1.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Request struct {
	N int32 `protobuf:"varint,1,opt,name=n" json:"n,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto1.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto1.RegisterType((*Response)(nil), "proto.Response")
	proto1.RegisterType((*Request)(nil), "proto.Request")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for FizzBuzzService service

type FizzBuzzServiceClient interface {
	FizzBuzz(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type fizzBuzzServiceClient struct {
	cc *grpc.ClientConn
}

func NewFizzBuzzServiceClient(cc *grpc.ClientConn) FizzBuzzServiceClient {
	return &fizzBuzzServiceClient{cc}
}

func (c *fizzBuzzServiceClient) FizzBuzz(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/proto.FizzBuzzService/FizzBuzz", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FizzBuzzService service

type FizzBuzzServiceServer interface {
	FizzBuzz(context.Context, *Request) (*Response, error)
}

func RegisterFizzBuzzServiceServer(s *grpc.Server, srv FizzBuzzServiceServer) {
	s.RegisterService(&_FizzBuzzService_serviceDesc, srv)
}

func _FizzBuzzService_FizzBuzz_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(FizzBuzzServiceServer).FizzBuzz(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _FizzBuzzService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.FizzBuzzService",
	HandlerType: (*FizzBuzzServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FizzBuzz",
			Handler:    _FizzBuzzService_FizzBuzz_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 130 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x52, 0x5c,
	0x1c, 0x41, 0xa9, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0x7c, 0x5c, 0x6c, 0x89, 0x79, 0xc5,
	0xe5, 0xa9, 0x45, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x4a, 0x22, 0x5c, 0xec, 0x41, 0xa9, 0x85,
	0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x9c, 0x5c, 0x8c, 0x79, 0x60, 0x51, 0x56, 0x23, 0x07, 0x2e, 0x7e,
	0xb7, 0xcc, 0xaa, 0x2a, 0xa7, 0xd2, 0xaa, 0xaa, 0x60, 0x88, 0x89, 0x42, 0xba, 0x5c, 0x1c, 0x30,
	0x21, 0x21, 0x3e, 0x88, 0xf9, 0x7a, 0x50, 0x9d, 0x52, 0xfc, 0x70, 0x3e, 0xc4, 0x16, 0x25, 0x86,
	0x24, 0x36, 0xb0, 0x88, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xee, 0x8b, 0xc5, 0x8d, 0x92, 0x00,
	0x00, 0x00,
}
